{"version":3,"sources":["Components/Graph/GraphDataProcessor.js","StateManagement/store.js","StateManagement/Reducers.js","StateManagement/Watcher.js","Components/APIHandler.js","PDFViewer.js","Components/UserInput.js","Components/NavBar.js","Components/Graph/Graph.js","Components/utils.js","Components/PaperDetails.js","Components/LoadPaperButton.js","ResearchGrapher.js","App.js","reportWebVitals.js","index.js"],"names":["JSONGraphProcessor","citations","graph","paper","forEach","citation","mergeNode","title","isCitation","mergeDirectedEdge","type","references","reference","isReference","store","getState","graphReducer","numCitedBy","dispatch","toast","this","addReferencesWithEdgesToGraph","addCitationsWithEdgesToGraph","D3GraphProcessor","convertGraphologyToD3Graph","convertToD3StyleLabeledLinks","nodes","map","node","decorateNodes","colorCodeNodes","reshapeBasedOnCitations","attributes","geometry","SphereGeometry","ConeGeometry","BoxGeometry","arxivId","node_color","text_color","doi","url","color","JSON","parse","stringify","toJSON","split","join","links","link","source","target","label","createStore","combineReducers","state","DirectedGraph","currently_selected_node","isUpdating","action","toastReducer","paperReducer","id","composeWithDevTools","id_watcher","watch","subscribe","newVal","oldVal","objectPath","paperId","fetch","then","res","json","error","fetchPaperDetailsFromAPI","result","undefined","startArxivIdWatcher","paper_watcher","data","updateStoreGraph","startPaperWatcher","toast_watcher","M","html","startToastWatcher","PDFViewer","props","useState","showPDF","setShowPDF","useSelector","progressBar","setProgressBar","setUrl","useEffect","isOpenAccess","setURlBasedOnPaperAvailability","className","src","frameBorder","onLoad","event","allowFullScreen","PopUpUrlLink","href","rel","UserInput","name","onSubmit","preventDefault","text_input","document","getElementById","value","paperType","querySelector","getInstance","close","placeholder","autoFocus","NavBar","Fragment","alignLinks","brand","NavbarSearchButton","actions","flat","modal","waves","trigger","class","Component","Graph","myRef","React","createRef","storeListener","w","setState","fg","current","d3Force","distance","bloomPass","UnrealBloomPass","strength","radius","exposure","threshold","postProcessingComposer","addPass","window","addEventListener","e","indexOf","code","convertToD3Graph","options","controlType","width","innerWidth","height","innerHeight","ref","graphData","nodeThreeObject","makeCustomNodes","onNodeClick","updateCurrentlySelectedNodeInStore","backgroundColor","linkThreeObject","generateBrightLinks","cooldownTime","Infinity","linkColors","Float32Array","material","LineBasicMaterial","vertexColors","transparent","BufferGeometry","setAttribute","BufferAttribute","Line","str","n","sprite","truncated_id","SpriteText","textHeight","position","y","generateSpriteText","length","substr","mesh","MeshBasicMaterial","Mesh","generateNodeGeometry","group","Group","add","PaperDetails","arxivLinkConfig","URL","location_name","doiLinkConfig","SemanticScholarLinkConfig","authors","showAuthorNames","year","ShowAbstract","abstract","venue","LinkTemplate","author","LoadPaperButton","useDispatch","reducedPaperDetails","setReducedPaperDetails","buttonConfig","onClick","tooltip","tooltipOptions","ResearchGrapher","showPaper","setShowPaper","ShowPaperDetailsAndPdf","l","ShowPaper","ShowPaperDetails","setPaper","arxivPaper","ShowPaperPdf","ShowGraphComponent","ShowUserInputComponent","ShowCurrentNode","ShowGraphWithCurrentNode","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.007e5f9a.chunk.js","sourcesContent":["import { BoxGeometry, ConeGeometry, SphereGeometry } from \"three\";\nimport { store } from \"../../StateManagement/store\";\n\nexport class JSONGraphProcessor {\n  static addCitationsWithEdgesToGraph(citations, graph, paper) {\n    citations.forEach((citation) => {\n      graph.mergeNode(citation.title, { ...citation, isCitation: true });\n      graph.mergeDirectedEdge(citation.title, paper.title, {\n        type: \"cites\",\n      });\n    });\n  }\n\n  static addReferencesWithEdgesToGraph(references, graph, paper) {\n    references.forEach((reference) => {\n      graph.mergeNode(reference.title, { ...reference, isReference: true });\n      graph.mergeDirectedEdge(paper.title, reference.title, {\n        type: \"refers\",\n      });\n    });\n  }\n\n  static updateStoreGraph(paper, citations, references) {\n    var graph = store.getState().graphReducer.graph;\n\n    if (paper.numCitedBy > 50) {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"High Citation Count detected system may lag\",\n      });\n    }\n\n    // Add the base paper to the graph\n    graph.mergeNode(paper.title, paper);\n    // Add the references paper to the graph\n    this.addReferencesWithEdgesToGraph(references, graph, paper);\n    this.addCitationsWithEdgesToGraph(citations, graph, paper);\n\n    store.dispatch({ type: \"GRAPH_UPDATE_STARTED\" });\n    //updated graph\n    store.dispatch({\n      type: \"UPDATE_GRAPH\",\n      graph: graph,\n    });\n\n    store.dispatch({ type: \"GRAPH_UPDATE_FINISHED\" });\n  }\n}\n\nexport class D3GraphProcessor {\n  static convertToD3Graph(graph) {\n    graph = this.convertGraphologyToD3Graph(graph);\n    graph = this.convertToD3StyleLabeledLinks(graph);\n\n    graph.nodes.map((node) => this.decorateNodes(node));\n\n    return graph;\n  }\n  static decorateNodes(node) {\n    // coloring for links\n    D3GraphProcessor.colorCodeNodes(node);\n    //   shapes based on reference or citation\n    D3GraphProcessor.reshapeBasedOnCitations(node);\n    return node;\n  }\n  static reshapeBasedOnCitations(node) {\n    if (node.attributes.isReference) {\n      node.geometry = new SphereGeometry(10, 10, 10);\n    } else if (node.attributes.isCitation) {\n      node.geometry = new ConeGeometry(10, 20, 10);\n    } else {\n      node.geometry = new BoxGeometry(10, 10, 10);\n    }\n  }\n\n  static colorCodeNodes(node) {\n    if (node.attributes.arxivId) {\n      // pink and indigo (bladerunner 2049)\n      node.node_color = \"#d500f9\";\n      node.text_color = \"#3d5afe\";\n    } else if (node.attributes.doi || node.attributes.url) {\n      // TODO:look for alternative color combo\n      node.node_color = \"#13EC40\";\n      node.text_color = \"#FEE13D\";\n    } else {\n      node.color = \"red\";\n    }\n  }\n\n  static convertGraphologyToD3Graph(graph) {\n    return JSON.parse(\n      JSON.stringify(graph.toJSON())\n        .split('\"edges\":')\n        .join('\"links\":')\n        .split('\"key\":')\n        .join('\"id\":')\n    );\n  }\n  static convertToD3StyleLabeledLinks(graph) {\n    graph.links = graph.links.map((link) => {\n      return {\n        source: link.source,\n        target: link.target,\n        label: link.attributes.type,\n      };\n    });\n    return graph;\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport { graphReducer, toastReducer, paperReducer } from \"./Reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  startArxivIdWatcher,\n  startPaperWatcher,\n  startToastWatcher,\n} from \"./Watcher\";\n\nexport const store = createStore(\n  combineReducers({\n    graphReducer,\n\n    toastReducer,\n    paperReducer,\n  }),\n  // remove this in prod build\n  composeWithDevTools()\n);\n\nstartArxivIdWatcher();\nstartPaperWatcher();\nstartToastWatcher();\n","import { DirectedGraph } from \"graphology\";\n\nexport function graphReducer(\n  state = {\n    graph: new DirectedGraph(),\n    currently_selected_node: null,\n    isUpdating: false,\n  },\n  action\n) {\n  switch (action.type) {\n    case \"GRAPH_UPDATE_STARTED\":\n      return {\n        ...state,\n        isUpdating: true,\n      };\n    case \"UPDATE_GRAPH\":\n      return {\n        ...state,\n        graph: action.graph,\n      };\n    case \"GRAPH_UPDATE_FINISHED\":\n      return {\n        ...state,\n        isUpdating: false,\n      };\n    case \"UPDATE_CURRENTLY_SELECTED_NODE\":\n      return {\n        ...state,\n        currently_selected_node: action.node,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function toastReducer(state = { toast: \"\" }, action) {\n  if (action.type === \"SEND_TOAST\") {\n    return { ...state, toast: action.toast };\n  }\n  return state;\n}\n\nexport function paperReducer(state = { paper: \"\", id: \"\" }, action) {\n  switch (action.type) {\n    case \"UPDATE_PAPER\":\n      return {\n        ...state,\n        paper: action.paper,\n      };\n\n    case \"UPDATE_PAPER_ID\":\n      return {\n        ...state,\n        id: action.id,\n      };\n\n    default:\n      return state;\n  }\n}\n","import watch from \"redux-watch\";\nimport { fetchPaperDetailsFromAPI } from \"../Components/APIHandler\";\nimport { JSONGraphProcessor } from \"../Components/Graph/GraphDataProcessor\";\nimport { store } from \"./store\";\nimport M from \"materialize-css\";\n\nexport const startArxivIdWatcher = () => {\n  // after id is changed update the paper\n  let id_watcher = watch(store.getState, \"paperReducer.id\");\n  store.subscribe(\n    id_watcher((newVal, oldVal, objectPath) => {\n      if (newVal !== oldVal) {\n        loadPaperFromApi(newVal);\n      }\n    })\n  );\n};\n\nexport const startPaperWatcher = () => {\n  // after paper is updated, update graph to include data of papers\n  let paper_watcher = watch(store.getState, \"paperReducer.paper\");\n  store.subscribe(\n    paper_watcher((newVal, oldVal, objectPath) => {\n      if (newVal !== oldVal) {\n        const { citations, references, ...data } = newVal;\n        JSONGraphProcessor.updateStoreGraph(data, citations, references);\n      }\n    })\n  );\n};\n\nexport const startToastWatcher = () => {\n  // fires after toast is updated\n  let toast_watcher = watch(store.getState, \"toastReducer.toast\");\n  store.subscribe(\n    toast_watcher((newVal, oldVal, objectPath) => {\n      if (newVal)\n        M.toast({ html: newVal });\n      else\n      M.toast({ html: oldVal });\n    })\n  );\n};\n\nfunction loadPaperFromApi(paperId) {\n  fetchPaperDetailsFromAPI(paperId).then((result) => {\n    if (result === undefined) {\n    } else if (result.url) {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Loading paper please wait\",\n      });\n      store.dispatch({\n        type: \"UPDATE_PAPER\",\n        paper: result,\n      });\n    } else if (result.error) {\n      //  if the api doesn't have a paper with that id toss this prompt\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: result.error,\n      });\n    } else {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"The paper ID seems appreas to be wrong\",\n      });\n    }\n  });\n}\n","import { store } from \"../StateManagement/store\";\n\nexport function fetchPaperDetailsFromAPI(paperId) {\n  return fetch(\n    \"https://api.semanticscholar.org/v1/paper/\" + paperId\n  ).then(\n    (res) => res.json(),\n    // fetch error\n    (error) => {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Failed to connect to the API\",\n      });\n    }\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Icon, ProgressBar } from \"react-materialize\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"./StateManagement/store\";\n\nexport const PDFViewer = (props) => {\n  const [showPDF, setShowPDF] = useState(false);\n  var paper = useSelector((state) => state.paperReducer.paper);\n  const [progressBar, setProgressBar] = useState(true);\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    setURlBasedOnPaperAvailability(paper, setUrl, setShowPDF, setProgressBar);\n  });\n  return (\n    <Card title=\"Preview\">\n      <PopUpUrlLink url={url} paper={paper} />\n      <div className=\"video-container\">\n        {progressBar ? <ProgressBar /> : null}\n        {showPDF ? (\n          <iframe\n            src={url}\n            frameBorder=\"0\"\n            onLoad={(event) => setProgressBar(false)}\n            allowFullScreen\n          />\n        ) : null}\n      </div>\n    </Card>\n  );\n};\nexport const PopUpUrlLink = (props) => {\n  if (props.paper && props.url) {\n    return (\n      <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.url}\n        <Icon>open_in_new</Icon>\n      </a>\n    );\n  }\n  return null;\n};\n\n// Can this be push into Redux?\nfunction setURlBasedOnPaperAvailability(\n  paper,\n  setUrl,\n  setShowPDF,\n  setProgressBar\n) {\n  if (paper.isOpenAccess) {\n    // TODO: if other opensource pdf viewer is then update this section\n    setUrl(paper.url);\n    setShowPDF(false);\n    setProgressBar(false);\n  }\n  if (paper.arxivId) {\n    setUrl(`https://arxiv.org/pdf/${paper.arxivId}.pdf`);\n    setShowPDF(true);\n    setProgressBar(false);\n  }\n  if (!paper.isOpenAccess && !paper.arxivId) {\n    // TODO: remove the preview component if the paper is not available for public\n    store.dispatch({\n      type: \"SEND_TOAST\",\n      toast: \"Loaded paper is not available for public access hence no preview\",\n    });\n    setUrl(\"\");\n    setShowPDF(false);\n    setProgressBar(true);\n  }\n}\n","import React from \"react\";\nimport { store } from \"../StateManagement/store\";\nimport * as M from \"materialize-css\";\n\nexport const UserInput = () => {\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    var text_input = document.getElementById(\"text-input\").value;\n\n    var paperType = document.querySelector('input[name=\"paperType\"]:checked');\n\n    if (paperType === null)\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Please select a paper type\"\n      });\n\n\n    else {\n      paperType = paperType.value;\n\n      closeModal();\n\n      if (paperType === \"doi\" || paperType === \"semanticscholar\")\n        store.dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: text_input,\n        });\n\n      else if (paperType === \"arxiv\")\n        store.dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: paperType + \":\" + text_input,\n        });\n    }\n  };\n\n  return (\n    <div>\n      <span>Enter the ID of the paper you are looking for</span>\n\n      <form name=\"paper-info\" onSubmit={onSubmit}>\n        <input\n          placeholder=\"Enter paper Id \"\n          autoFocus={true}\n          id=\"text-input\"\n          name=\"paper-id-text\"\n        />\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"arxiv\" />\n            <span>Arxiv</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"doi\" />\n            <span>DOI</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"semanticscholar\" />\n            <span>SemanticScholar Paper Id</span>\n          </label>\n        </p>\n        <input type=\"submit\" value=\"Submit\" className=\"btn black white-text\" />\n      </form>\n    </div>\n  );\n};\n\nfunction closeModal() {\n  M.Modal.getInstance(document.getElementById(\"searchbuttonmodal\")).close();\n}","import React, { Component } from \"react\";\nimport { Navbar } from \"react-materialize\";\nimport { Button, Icon, Modal, NavItem } from \"react-materialize\";\nimport { UserInput } from \"./UserInput\";\n\n\n\nexport const NavBar = () => {\n  return (\n    <React.Fragment>\n      <div className=\"navbar-fixed \">\n        <Navbar\n          className=\"black\"\n          alignLinks=\"right\"\n          brand={<span className=\"brand-logo\">Research Grapher</span>}>\n          <NavbarSearchButton />\n        </Navbar>\n      </div>\n    </React.Fragment>\n  );\n};\n\n\n\n\n\nexport class NavbarSearchButton extends Component {\n  render() {\n    return (\n      <NavItem>\n        <Modal\n          id=\"searchbuttonmodal\"\n          actions={[\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n              Close\n            </Button>,\n          ]}\n          trigger={\n\n\n            <Icon class=\"material-icons-outlined\">\n              note_add\n              </Icon>\n\n\n          }>\n          <UserInput />\n        </Modal>\n      </NavItem>\n    );\n  }\n}\n","import SpriteText from \"three-spritetext\";\nimport React, { Component } from \"react\";\nimport { D3GraphProcessor } from \"./GraphDataProcessor\";\nimport { ForceGraph3D } from \"react-force-graph\";\nimport { store } from \"../../StateManagement/store\";\nimport watch from \"redux-watch\";\nimport { Group, Mesh, MeshBasicMaterial, LineBasicMaterial, BufferGeometry, BufferAttribute, Line, Color } from \"three\";\nimport { Card } from \"react-materialize\";\nimport { truncate } from \"../utils\";\nimport { UnrealBloomPass } from \"three/examples/jsm/postprocessing/UnrealBloomPass\";\n\nexport class Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      graph: store.getState().graphReducer.graph,\n    };\n    this.storeListener();\n  }\n  storeListener() {\n    let w = watch(store.getState, \"graphReducer.isUpdating\");\n    store.subscribe(\n      w((newVal, oldVal, objectPath) => {\n        if (newVal === false) {\n          this.setState({\n            graph: store.getState().graphReducer.graph,\n          });\n        }\n      })\n    );\n  }\n\n  componentDidMount() {\n    const fg = this.myRef.current;\n    fg.d3Force(\"link\").distance((link) => 500);\n    const bloomPass = new UnrealBloomPass();\n    bloomPass.strength = 0.3;\n    bloomPass.radius = 0.2;\n    bloomPass.exposure = 1.1;\n    bloomPass.threshold = 0.1;\n    fg.postProcessingComposer().addPass(bloomPass);\n\n    disableDefaultArrowKeysBehaviour();\n  }\n  render() {\n    var graph = this.state.graph;\n    graph = D3GraphProcessor.convertToD3Graph(graph);\n    const { attributes, options, ...data } = graph;\n\n    return (\n      <Card title=\"Citation Graph\">\n        <ForceGraph3D\n          controlType='fly'\n          width={window.innerWidth / 2.2}\n          height={window.innerHeight / 2}\n          ref={this.myRef}\n          graphData={data}\n          nodeThreeObject={makeCustomNodes}\n          onNodeClick={updateCurrentlySelectedNodeInStore}\n          backgroundColor=\"#101020\"\n          linkThreeObject={generateBrightLinks}\n         cooldownTime={Infinity}\n        />\n      </Card>\n    );\n  }\n}\nconst generateBrightLinks = link => {\n  const linkColors = new Float32Array([255, 255, 255]);\n  const material = new LineBasicMaterial({ vertexColors: true, transparent: true });\n  const geometry = new BufferGeometry();\n  geometry.setAttribute('position', new BufferAttribute(new Float32Array(2 * 3), 3));\n  geometry.setAttribute('color', new BufferAttribute(linkColors, 3));\n\n  return new Line(geometry, material);\n};\nconst updateCurrentlySelectedNodeInStore = (node, event) => {\n  store.dispatch({\n    type: \"UPDATE_CURRENTLY_SELECTED_NODE\",\n    node: node,\n  });\n};\nconst makeCustomNodes = (node) => {\n  var truncated_id = truncate(node.id, 25);\n  const sprite = generateSpriteText(truncated_id, node);\n\n  const mesh = generateNodeGeometry(node);\n\n  var group = new Group();\n  group.add(sprite, mesh);\n  return group;\n};\n\nfunction disableDefaultArrowKeysBehaviour() {\n  window.addEventListener(\"keydown\", function (e) {\n    if ([\"ArrowUp\", \"ArrowDown\", \"ArrowLeft\", \"ArrowRight\"].indexOf(e.code) > -1) {\n      e.preventDefault();\n    }\n  }, false);\n}\n\nfunction generateNodeGeometry(node) {\n  const material = new MeshBasicMaterial({ color: node.node_color });\n\n  const mesh = new Mesh(node.geometry, material);\n  return mesh;\n}\n\nfunction generateSpriteText(truncated_id, node) {\n  const sprite = new SpriteText(truncated_id);\n  sprite.color = node.text_color;\n  sprite.textHeight = 18;\n  sprite.position.y = 11;\n  return sprite;\n}\n","export function truncate(str, n) {\n    return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n  ","import React from \"react\";\nimport { Icon } from \"react-materialize\";\n\nexport const PaperDetails = (props) => {\n  const paper = props.paper;\n  const arxivLinkConfig = {\n    URL: \"https://arxiv.org/abs/\" + paper.arxivId,\n    location_name: \"arXiv\",\n    paperId: paper.arxivId,\n  };\n  const doiLinkConfig = {\n    URL: \"https://doi.org/\" + paper.doi,\n    location_name: \"doi\",\n    paperId: paper.doi,\n  };\n  const SemanticScholarLinkConfig = {\n    URL: paper.url,\n    location_name: \"SemanticScholar\",\n    paperId: paper.paperId,\n  };\n\n  return (\n    <div>\n      Authors : {paper.authors ? showAuthorNames(paper) : \"Unknown\"}\n      <br />\n      Year : {paper.year ? paper.year : \"Unknown\"}\n      <br />\n      <ShowAbstract abstract={paper.abstract} />\n      Venue : {paper.venue ? paper.venue : \"Unknown\"}\n      <br />\n      <h6>Links:</h6>\n      {paper.arxivId ? <LinkTemplate {...arxivLinkConfig} /> : null}\n      {paper.doi ? <LinkTemplate {...doiLinkConfig} /> : null}\n      {paper.url ? <LinkTemplate {...SemanticScholarLinkConfig} /> : null}\n    </div>\n  );\n};\n\nexport const LinkTemplate = (props) => {\n  return (\n    <div>\n      {props.location_name} :\n      <a href={props.URL} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.paperId}\n        <Icon>open_in_new</Icon>\n      </a>\n    </div>\n  );\n};\n\nfunction ShowAbstract(props) {\n  if (props.abstract) return <div> Abstract : {props.abstract} </div>;\n  else return null;\n}\n\nfunction showAuthorNames(paper) {\n  return paper.authors\n    .map((author) => {\n      return author.name;\n    })\n    .join(\", \");\n}\n","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-materialize\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const LoadPaperButton = () => {\n  const dispatch = useDispatch();\n  const [reducedPaperDetails, setReducedPaperDetails] = useState(null);\n  // This can be generalised for other type of papers aswell\n  var currently_selected_node = useSelector(\n    (state) => state.graphReducer.currently_selected_node\n  );\n  useEffect(() => {\n    if (currently_selected_node)\n      setReducedPaperDetails(currently_selected_node.attributes);\n  });\n\n  return (\n    <Button\n      {...buttonConfig}\n      onClick={(event) => {\n        // TODO: add other paper id methods aswell\n        var id;\n\n        if (reducedPaperDetails.arxivId) {\n          id = \"arxiv:\" + reducedPaperDetails.arxivId;\n        } else if (reducedPaperDetails.doi) {\n          id = reducedPaperDetails.doi;\n        } else if (reducedPaperDetails.paperId) {\n          id = reducedPaperDetails.paperId;\n        }\n        dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: id,\n        });\n      }}\n      tooltip=\"Preview the paper in the PDF Window\"\n      tooltipOptions={{\n        position: \"top\",\n      }}\n      className=\"orange-text\">\n      Load Paper\n    </Button>\n  );\n};\n\nconst buttonConfig = {\n  flat: true,\n  modal: \"close\",\n  node: \"button\",\n  waves: \"light\",\n};\n","import watch from \"redux-watch\";\nimport { PDFViewer } from \"./PDFViewer\";\nimport { useSelector } from \"react-redux\";\nimport { NavBar } from \"./Components/NavBar\";\nimport { store } from \"./StateManagement/store\";\nimport { Graph } from \"./Components/Graph/Graph\";\nimport React, { useEffect, useState } from \"react\";\nimport { UserInput } from \"./Components/UserInput\";\nimport { PaperDetails } from \"./Components/PaperDetails\";\nimport { LoadPaperButton } from \"./Components/LoadPaperButton\";\nimport { Card, CardPanel, Col, Container, Row } from \"react-materialize\";\n\nexport const ResearchGrapher = () => {\n  const [showPaper, setShowPaper] = useState(false);\n\n  useEffect(() => {\n    let paper_watcher = watch(store.getState, \"paperReducer.paper\");\n    store.subscribe(\n      paper_watcher((newVal, oldVal, objectPath) => {\n        if (newVal !== null && newVal !== false) setShowPaper(true);\n      })\n    );\n  });\n  return (\n    <React.Fragment>\n      <NavBar />\n      {showPaper ? <ShowPaper /> : <ShowUserInputComponent />}\n    </React.Fragment>\n  );\n};\n\nconst ShowPaperDetailsAndPdf = (props) => {\n  return (\n    <Col l={6}>\n      <ShowPaperDetails />\n      <ShowPaperPdf />\n    </Col>\n  );\n};\nexport const ShowPaper = (props) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col l={6}>\n          <ShowGraphWithCurrentNode />\n        </Col>\n        <ShowPaperDetailsAndPdf />\n      </Row>\n    </React.Fragment>\n  );\n};\n\nconst ShowPaperDetails = (props) => {\n  const [paper, setPaper] = useState(store.getState().paperReducer.paper);\n  // This can be generalised for other type of papers aswell\n  var arxivPaper = useSelector((state) => state.paperReducer.paper);\n  useEffect(() => setPaper(arxivPaper));\n  return (\n    <Card title=\"Recently loaded paper\">\n      <span>Title : {paper.title}</span>\n      <PaperDetails paper={paper} />\n    </Card>\n  );\n};\nconst ShowPaperPdf = () => {\n  return <PDFViewer />;\n};\n\nconst ShowGraphComponent = () => {\n  return <Graph />;\n};\n\nconst ShowUserInputComponent = () => {\n  return (\n    <Container>\n      <CardPanel className=\"large\">\n        <UserInput />\n      </CardPanel>\n    </Container>\n  );\n};\nconst ShowCurrentNode = () => {\n  const [reducedPaperDetails, setReducedPaperDetails] = useState(null);\n  // This can be generalised for other type of papers aswell\n  var currently_selected_node = useSelector(\n    (state) => state.graphReducer.currently_selected_node\n  );\n  useEffect(() => {\n    if (currently_selected_node)\n      setReducedPaperDetails(currently_selected_node.attributes);\n  });\n  return (\n    <React.Fragment>\n      {currently_selected_node && reducedPaperDetails && (\n        <Card title=\"Selected Node\" actions={<LoadPaperButton />}>\n          <span>Title : {reducedPaperDetails.title}</span>\n          <PaperDetails paper={reducedPaperDetails} />\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\nconst ShowGraphWithCurrentNode = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <ShowGraphComponent />\n        <ShowCurrentNode />\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { ResearchGrapher } from \"./ResearchGrapher\";\nimport \"materialize-css/dist/css/materialize.css\";\nimport \"material-icons/iconfont/material-icons.css\";\nimport * as M from \"materialize-css\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    M.AutoInit();\n  }\n  render() {\n    return <ResearchGrapher />;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./StateManagement/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}