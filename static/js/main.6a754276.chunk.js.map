{"version":3,"sources":["Components/UserInput.js","Components/NavBar.js","Components/PaperDetails.js","Components/LoadPaperButton.js","ResearchGrapher.js","App.js","serviceWorkerRegistration.js","index.js","StateManagement/store.js","StateManagement/Reducers.js","StateManagement/Watcher.js","Components/APIHandler.js","Components/Graph/GraphDataProcessor.js"],"names":["UserInput","name","onSubmit","event","preventDefault","text_input","document","getElementById","value","paperType","querySelector","store","dispatch","type","toast","M","getInstance","close","id","placeholder","autoFocus","className","NavBar","Fragment","alignLinks","brand","NavbarSearchButton","actions","flat","modal","node","waves","trigger","class","Component","PaperDetails","props","paper","arxivLinkConfig","URL","arxivId","location_name","paperId","doiLinkConfig","doi","SemanticScholarLinkConfig","url","authors","showAuthorNames","year","ShowAbstract","abstract","venue","LinkTemplate","href","target","rel","map","author","join","LoadPaperButton","useDispatch","useState","reducedPaperDetails","setReducedPaperDetails","currently_selected_node","useSelector","state","graphReducer","useEffect","attributes","buttonConfig","onClick","tooltip","tooltipOptions","position","Graph","React","lazy","PDFViewer","ResearchGrapher","showPaper","setShowPaper","paper_watcher","watch","getState","subscribe","newVal","oldVal","objectPath","ShowPaperDetailsAndPdf","l","ShowPaper","ShowPaperDetails","paperReducer","setPaper","arxivPaper","title","ShowPaperPdf","fallback","ShowGraphComponent","ShowUserInputComponent","ShowCurrentNode","ShowGraphWithCurrentNode","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","createStore","combineReducers","graph","DirectedGraph","isUpdating","action","toastReducer","composeWithDevTools","id_watcher","res","json","fetchPaperDetailsFromAPI","result","undefined","startArxivIdWatcher","citations","references","data","JSONGraphProcessor","updateStoreGraph","startPaperWatcher","toast_watcher","html","startToastWatcher","forEach","citation","mergeNode","isCitation","mergeDirectedEdge","reference","isReference","numCitedBy","this","addReferencesWithEdgesToGraph","addCitationsWithEdgesToGraph","D3GraphProcessor","convertGraphologyToD3Graph","convertToD3StyleLabeledLinks","nodes","decorateNodes","colorCodeNodes","reshapeBasedOnCitations","geometry","SphereGeometry","ConeGeometry","BoxGeometry","node_color","text_color","color","JSON","parse","stringify","toJSON","split","links","link","source","label"],"mappings":"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","file":"static/js/main.6a754276.chunk.js","sourcesContent":["import React from \"react\";\nimport { store } from \"../StateManagement/store\";\nimport * as M from \"materialize-css\";\n\nexport const UserInput = () => {\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    var text_input = document.getElementById(\"text-input\").value;\n\n    var paperType = document.querySelector('input[name=\"paperType\"]:checked');\n\n    if (paperType === null)\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Please select a paper type\"\n      });\n\n\n    else {\n      paperType = paperType.value;\n\n      closeModal();\n\n      if (paperType === \"doi\" || paperType === \"semanticscholar\")\n        store.dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: text_input,\n        });\n\n      else if (paperType === \"arxiv\")\n        store.dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: paperType + \":\" + text_input,\n        });\n    }\n  };\n\n  return (\n    <div>\n      <span>Enter the ID of the paper you are looking for</span>\n\n      <form name=\"paper-info\" onSubmit={onSubmit}>\n        <input\n          placeholder=\"Enter paper Id \"\n          autoFocus={true}\n          id=\"text-input\"\n          name=\"paper-id-text\"\n        />\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"arxiv\" />\n            <span>Arxiv</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"doi\" />\n            <span>DOI</span>\n          </label>\n        </p>\n        <p>\n          <label>\n            <input name=\"paperType\" type=\"radio\" value=\"semanticscholar\" />\n            <span>SemanticScholar Paper Id</span>\n          </label>\n        </p>\n        <input type=\"submit\" value=\"Submit\" className=\"btn black white-text\" />\n      </form>\n    </div>\n  );\n};\n\nfunction closeModal() {\n  M.Modal.getInstance(document.getElementById(\"searchbuttonmodal\")).close();\n}","import React, { Component } from \"react\";\nimport { Navbar } from \"react-materialize\";\nimport { Button, Icon, Modal, NavItem } from \"react-materialize\";\nimport { UserInput } from \"./UserInput\";\n\n\n\nexport const NavBar = () => {\n  return (\n    <React.Fragment>\n      <div className=\"navbar-fixed \">\n        <Navbar\n          className=\"black\"\n          alignLinks=\"right\"\n          brand={<span className=\"brand-logo\">Research Grapher</span>}>\n          <NavbarSearchButton />\n        </Navbar>\n      </div>\n    </React.Fragment>\n  );\n};\n\n\n\n\n\nexport class NavbarSearchButton extends Component {\n  render() {\n    return (\n      <NavItem>\n        <Modal\n          id=\"searchbuttonmodal\"\n          actions={[\n            <Button flat modal=\"close\" node=\"button\" waves=\"green\">\n              Close\n            </Button>,\n          ]}\n          trigger={\n\n\n            <Icon class=\"material-icons-outlined\">\n              note_add\n              </Icon>\n\n\n          }>\n          <UserInput />\n        </Modal>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Icon } from \"react-materialize\";\n\nexport const PaperDetails = (props) => {\n  const paper = props.paper;\n  const arxivLinkConfig = {\n    URL: \"https://arxiv.org/abs/\" + paper.arxivId,\n    location_name: \"arXiv\",\n    paperId: paper.arxivId,\n  };\n  const doiLinkConfig = {\n    URL: \"https://doi.org/\" + paper.doi,\n    location_name: \"doi\",\n    paperId: paper.doi,\n  };\n  const SemanticScholarLinkConfig = {\n    URL: paper.url,\n    location_name: \"SemanticScholar\",\n    paperId: paper.paperId,\n  };\n\n  return (\n    <div>\n      Authors : {paper.authors ? showAuthorNames(paper) : \"Unknown\"}\n      <br />\n      Year : {paper.year ? paper.year : \"Unknown\"}\n      <br />\n      <ShowAbstract abstract={paper.abstract} />\n      Venue : {paper.venue ? paper.venue : \"Unknown\"}\n      <br />\n      <h6>Links:</h6>\n      {paper.arxivId ? <LinkTemplate {...arxivLinkConfig} /> : null}\n      {paper.doi ? <LinkTemplate {...doiLinkConfig} /> : null}\n      {paper.url ? <LinkTemplate {...SemanticScholarLinkConfig} /> : null}\n    </div>\n  );\n};\n\nexport const LinkTemplate = (props) => {\n  return (\n    <div>\n      {props.location_name} :\n      <a href={props.URL} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.paperId}\n        <Icon>open_in_new</Icon>\n      </a>\n    </div>\n  );\n};\n\nfunction ShowAbstract(props) {\n  if (props.abstract) return <div> Abstract : {props.abstract} </div>;\n  else return null;\n}\n\nfunction showAuthorNames(paper) {\n  return paper.authors\n    .map((author) => {\n      return author.name;\n    })\n    .join(\", \");\n}\n","import { useEffect, useState } from \"react\";\nimport { Button } from \"react-materialize\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const LoadPaperButton = () => {\n  const dispatch = useDispatch();\n  const [reducedPaperDetails, setReducedPaperDetails] = useState(null);\n  // This can be generalised for other type of papers aswell\n  var currently_selected_node = useSelector(\n    (state) => state.graphReducer.currently_selected_node\n  );\n  useEffect(() => {\n    if (currently_selected_node)\n      setReducedPaperDetails(currently_selected_node.attributes);\n  },[currently_selected_node]);\n\n  return (\n    <Button\n      {...buttonConfig}\n      onClick={(event) => {\n        // TODO: add other paper id methods aswell\n        var id;\n\n        if (reducedPaperDetails.arxivId) {\n          id = \"arxiv:\" + reducedPaperDetails.arxivId;\n        } else if (reducedPaperDetails.doi) {\n          id = reducedPaperDetails.doi;\n        } else if (reducedPaperDetails.paperId) {\n          id = reducedPaperDetails.paperId;\n        }\n        dispatch({\n          type: \"UPDATE_PAPER_ID\",\n          id: id,\n        });\n      }}\n      tooltip=\"Preview the paper in the PDF Window\"\n      tooltipOptions={{\n        position: \"top\",\n      }}\n      className=\"orange-text\">\n      Load Paper\n    </Button>\n  );\n};\n\nconst buttonConfig = {\n  flat: true,\n  modal: \"close\",\n  node: \"button\",\n  waves: \"light\",\n};\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport watch from \"redux-watch\";\nimport { useSelector } from \"react-redux\";\nimport { NavBar } from \"./Components/NavBar\";\nimport { store } from \"./StateManagement/store\";\nimport { UserInput } from \"./Components/UserInput\";\nimport { PaperDetails } from \"./Components/PaperDetails\";\nimport { LoadPaperButton } from \"./Components/LoadPaperButton\";\nimport { Card, CardPanel, Col, Container, ProgressBar, Row } from \"react-materialize\";\n\n\nconst Graph = React.lazy(() => import(\"./Components/Graph/Graph\"));\nconst PDFViewer = React.lazy(() => import(\"./PDFViewer\"));\n\nexport const ResearchGrapher = () => {\n  const [showPaper, setShowPaper] = useState(false);\n\n  useEffect(() => {\n    let paper_watcher = watch(store.getState, \"paperReducer.paper\");\n    store.subscribe(\n      paper_watcher((newVal, oldVal, objectPath) => (newVal !== null && newVal !== false) ? setShowPaper(true) : null)\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      {showPaper ? <ShowPaper /> : <ShowUserInputComponent />}\n    </React.Fragment>\n  );\n};\n\n\nconst ShowPaperDetailsAndPdf = (props) => {\n  return (\n    <Col l={6}>\n      <ShowPaperDetails />\n      <ShowPaperPdf />\n    </Col>\n  );\n};\n\n\nexport const ShowPaper = (props) => {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col l={6}>\n          <ShowGraphWithCurrentNode />\n        </Col>\n        <ShowPaperDetailsAndPdf />\n      </Row>\n    </React.Fragment>\n  );\n};\n\n\n\nconst ShowPaperDetails = (props) => {\n  const [paper, setPaper] = useState(store.getState().paperReducer.paper);\n  // This can be generalised for other type of papers aswell\n  var arxivPaper = useSelector((state) => state.paperReducer.paper);\n  useEffect(() => setPaper(arxivPaper), [arxivPaper]);\n  return (\n    <Card title=\"Recently loaded paper\">\n      <span>Title : {paper.title}</span>\n      <PaperDetails paper={paper} />\n    </Card>\n  );\n};\n\n\nconst ShowPaperPdf = () => {\n  return (\n    <Suspense fallback={<ProgressBar/>}>\n      <PDFViewer />\n    </Suspense>)\n};\n\n\nconst ShowGraphComponent = () => {\n  return (\n    <Suspense fallback={<ProgressBar/>}>\n      <Graph />\n    </Suspense>)\n};\n\n\nconst ShowUserInputComponent = () => {\n  return (\n    <Container>\n      <CardPanel className=\"large\">\n        <UserInput />\n      </CardPanel>\n    </Container>\n  );\n};\n\n\nconst ShowCurrentNode = () => {\n  const [reducedPaperDetails, setReducedPaperDetails] = useState(null);\n  var currently_selected_node = useSelector(\n    (state) => state.graphReducer.currently_selected_node\n  );\n  useEffect(() => {\n    if (currently_selected_node)\n      setReducedPaperDetails(currently_selected_node.attributes);\n  }, [currently_selected_node]);\n  return (\n    <React.Fragment>\n      {currently_selected_node && reducedPaperDetails && (\n        <Card title=\"Selected Node\" actions={<LoadPaperButton />}>\n          <span>Title : {reducedPaperDetails.title}</span>\n          <PaperDetails paper={reducedPaperDetails} />\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\n\n\nconst ShowGraphWithCurrentNode = () => {\n  return (\n    <React.Fragment>\n      <Row>\n        <ShowGraphComponent />\n        <ShowCurrentNode />\n      </Row>\n    </React.Fragment>\n  );\n};\n","import React, { Component } from \"react\";\nimport { ResearchGrapher } from \"./ResearchGrapher\";\nimport \"materialize-css/dist/css/materialize.css\";\nimport \"material-icons/iconfont/material-icons.css\";\nimport * as M from \"materialize-css\";\n\nexport default class App extends Component {\n  componentDidMount() {\n    M.AutoInit();\n  }\n  render() {\n    return <ResearchGrapher />;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./StateManagement/store\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n\nserviceWorkerRegistration.register();\n","import { createStore, combineReducers } from \"redux\";\nimport { graphReducer, toastReducer, paperReducer } from \"./Reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  startArxivIdWatcher,\n  startPaperWatcher,\n  startToastWatcher,\n} from \"./Watcher\";\n\nexport const store = createStore(\n  combineReducers({\n    graphReducer,\n\n    toastReducer,\n    paperReducer,\n  }),\n  // remove this in prod build\n  composeWithDevTools()\n);\n\nstartArxivIdWatcher();\nstartPaperWatcher();\nstartToastWatcher();\n","import { DirectedGraph } from \"graphology\";\n\nexport function graphReducer(\n  state = {\n    graph: new DirectedGraph(),\n    currently_selected_node: null,\n    isUpdating: false,\n  },\n  action\n) {\n  switch (action.type) {\n    case \"GRAPH_UPDATE_STARTED\":\n      return {\n        ...state,\n        isUpdating: true,\n      };\n    case \"UPDATE_GRAPH\":\n      return {\n        ...state,\n        graph: action.graph,\n      };\n    case \"GRAPH_UPDATE_FINISHED\":\n      return {\n        ...state,\n        isUpdating: false,\n      };\n    case \"UPDATE_CURRENTLY_SELECTED_NODE\":\n      return {\n        ...state,\n        currently_selected_node: action.node,\n      };\n    default:\n      return state;\n  }\n}\n\nexport function toastReducer(state = { toast: \"\" }, action) {\n  if (action.type === \"SEND_TOAST\") {\n    return { ...state, toast: action.toast };\n  }\n  return state;\n}\n\nexport function paperReducer(state = { paper: \"\", id: \"\" }, action) {\n  switch (action.type) {\n    case \"UPDATE_PAPER\":\n      return {\n        ...state,\n        paper: action.paper,\n      };\n\n    case \"UPDATE_PAPER_ID\":\n      return {\n        ...state,\n        id: action.id,\n      };\n\n    default:\n      return state;\n  }\n}\n","import watch from \"redux-watch\";\nimport { fetchPaperDetailsFromAPI } from \"../Components/APIHandler\";\nimport { JSONGraphProcessor } from \"../Components/Graph/GraphDataProcessor\";\nimport { store } from \"./store\";\nimport M from \"materialize-css\";\n\nexport const startArxivIdWatcher = () => {\n  // after id is changed update the paper\n  let id_watcher = watch(store.getState, \"paperReducer.id\");\n  store.subscribe(\n    id_watcher((newVal, oldVal, objectPath) => {\n      if (newVal !== oldVal) {\n        loadPaperFromApi(newVal);\n      }\n    })\n  );\n};\n\nexport const startPaperWatcher = () => {\n  // after paper is updated, update graph to include data of papers\n  let paper_watcher = watch(store.getState, \"paperReducer.paper\");\n  store.subscribe(\n    paper_watcher((newVal, oldVal, objectPath) => {\n      if (newVal !== oldVal) {\n        const { citations, references, ...data } = newVal;\n        JSONGraphProcessor.updateStoreGraph(data, citations, references);\n      }\n    })\n  );\n};\n\nexport const startToastWatcher = () => {\n  // fires after toast is updated\n  let toast_watcher = watch(store.getState, \"toastReducer.toast\");\n  store.subscribe(\n    toast_watcher((newVal, oldVal, objectPath) => {\n      if (newVal)\n        M.toast({ html: newVal });\n      else\n      M.toast({ html: oldVal });\n    })\n  );\n};\n\nfunction loadPaperFromApi(paperId) {\n  fetchPaperDetailsFromAPI(paperId).then((result) => {\n    if (result === undefined) {\n    } else if (result.url) {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Loading paper please wait\",\n      });\n      store.dispatch({\n        type: \"UPDATE_PAPER\",\n        paper: result,\n      });\n    } else if (result.error) {\n      //  if the api doesn't have a paper with that id toss this prompt\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: result.error,\n      });\n    } else {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"The paper ID seems appreas to be wrong\",\n      });\n    }\n  });\n}\n","import { store } from \"../StateManagement/store\";\n\nexport function fetchPaperDetailsFromAPI(paperId) {\n  return fetch(\n    \"https://api.semanticscholar.org/v1/paper/\" + paperId\n  ).then(\n    (res) => res.json(),\n    // fetch error\n    (error) => {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"Failed to connect to the API\",\n      });\n    }\n  );\n}\n","import { BoxGeometry, ConeGeometry, SphereGeometry } from \"three\";\nimport { store } from \"../../StateManagement/store\";\n\nexport class JSONGraphProcessor {\n  static addCitationsWithEdgesToGraph(citations, graph, paper) {\n    citations.forEach((citation) => {\n      graph.mergeNode(citation.title, { ...citation, isCitation: true });\n      graph.mergeDirectedEdge(citation.title, paper.title, {\n        type: \"cites\",\n      });\n    });\n  }\n\n  static addReferencesWithEdgesToGraph(references, graph, paper) {\n    references.forEach((reference) => {\n      graph.mergeNode(reference.title, { ...reference, isReference: true });\n      graph.mergeDirectedEdge(paper.title, reference.title, {\n        type: \"refers\",\n      });\n    });\n  }\n\n  static updateStoreGraph(paper, citations, references) {\n    var graph = store.getState().graphReducer.graph;\n\n    if (paper.numCitedBy > 50) {\n      store.dispatch({\n        type: \"SEND_TOAST\",\n        toast: \"High Citation Count detected system may lag\",\n      });\n    }\n\n    // Add the base paper to the graph\n    graph.mergeNode(paper.title, paper);\n    // Add the references paper to the graph\n    this.addReferencesWithEdgesToGraph(references, graph, paper);\n    this.addCitationsWithEdgesToGraph(citations, graph, paper);\n\n    store.dispatch({ type: \"GRAPH_UPDATE_STARTED\" });\n    //updated graph\n    store.dispatch({\n      type: \"UPDATE_GRAPH\",\n      graph: graph,\n    });\n\n    store.dispatch({ type: \"GRAPH_UPDATE_FINISHED\" });\n  }\n}\n\nexport class D3GraphProcessor {\n  static convertToD3Graph(graph) {\n    graph = this.convertGraphologyToD3Graph(graph);\n    graph = this.convertToD3StyleLabeledLinks(graph);\n\n    graph.nodes.map((node) => this.decorateNodes(node));\n\n    return graph;\n  }\n  static decorateNodes(node) {\n    // coloring for links\n    D3GraphProcessor.colorCodeNodes(node);\n    //   shapes based on reference or citation\n    D3GraphProcessor.reshapeBasedOnCitations(node);\n    return node;\n  }\n  static reshapeBasedOnCitations(node) {\n    if (node.attributes.isReference) {\n      node.geometry = new SphereGeometry(10, 10, 10);\n    } else if (node.attributes.isCitation) {\n      node.geometry = new ConeGeometry(10, 20, 10);\n    } else {\n      node.geometry = new BoxGeometry(10, 10, 10);\n    }\n  }\n\n  static colorCodeNodes(node) {\n    if (node.attributes.arxivId) {\n      // pink and indigo (bladerunner 2049)\n      node.node_color = \"#d500f9\";\n      node.text_color = \"#3d5afe\";\n    } else if (node.attributes.doi || node.attributes.url) {\n      // TODO:look for alternative color combo\n      node.node_color = \"#13EC40\";\n      node.text_color = \"#FEE13D\";\n    } else {\n      node.color = \"red\";\n    }\n  }\n\n  static convertGraphologyToD3Graph(graph) {\n    return JSON.parse(\n      JSON.stringify(graph.toJSON())\n        .split('\"edges\":')\n        .join('\"links\":')\n        .split('\"key\":')\n        .join('\"id\":')\n    );\n  }\n  static convertToD3StyleLabeledLinks(graph) {\n    graph.links = graph.links.map((link) => {\n      return {\n        source: link.source,\n        target: link.target,\n        label: link.attributes.type,\n      };\n    });\n    return graph;\n  }\n}\n"],"sourceRoot":""}