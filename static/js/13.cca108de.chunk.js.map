{"version":3,"sources":["Components/PDFViewer.js"],"names":["Card","React","lazy","Icon","PDFViewer","paper","useSelector","state","loadedPaper","success","ShowPdf","isLoading","arxivId","CardComponent","url","id","doi","DoiCard","SemanticScholarCard","title","fallback","actions","href","target","rel","className","src","frameBorder","paperId"],"mappings":"+FAAA,yGAGMA,EAAOC,IAAMC,MAAK,kBAAM,oCACxBC,EAAOF,IAAMC,MAAK,kBAAM,oCA8BfE,UA5BG,WAChB,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,SACjDI,EAAUH,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,WAErDC,GADcJ,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYG,aAC7C,MAqBd,OAlBID,EAFAD,EACEJ,EAAMO,QAEN,cAACC,EAAD,CACEC,IAAG,gCAA2BT,EAAMO,QAAjC,QACHG,GAAIV,EAAMO,UAELP,EAAMW,IACL,cAACC,EAAD,CAASZ,MAAOA,IAEhB,cAACa,EAAD,CAAqBb,MAAOA,IAItC,cAACL,EAAD,CAAMmB,MAAM,UAAZ,SACE,8DAKC,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SAAsCV,KAKxC,IAAMG,EAAgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,GACnC,OACE,cAACf,EAAD,CACEmB,MAAM,UACNE,QAAS,CACP,oBAAGC,KAAMR,EAAYS,OAAO,SAASC,IAAI,sBAAzC,UACGT,EACD,cAACZ,EAAD,4BAFgB,KAHtB,SAQE,qBAAKsB,UAAU,kBAAf,SACE,wBAAQC,IAAKZ,EAAKa,YAAY,WAMtC,SAAST,EAAT,GAAyC,IAAVb,EAAS,EAATA,MAC7B,OACE,cAACL,EAAD,CAAMmB,MAAM,UAAZ,SACE,oBAAGG,KAAMjB,EAAMS,IAAYS,OAAO,SAASC,IAAI,sBAA/C,UACGnB,EAAMuB,QACP,cAACzB,EAAD,4BAFsB,MAQ9B,SAASc,EAAT,GAA6B,IAAVZ,EAAS,EAATA,MACjB,OACE,cAACL,EAAD,CAAMmB,MAAM,UAAZ,SACE,oBACEG,KAAI,0BAAqBjB,EAAMW,KAE/BO,OAAO,SACPC,IAAI,sBAJN,UAKGnB,EAAMW,IACP,cAACb,EAAD,4BAJI","file":"static/js/13.cca108de.chunk.js","sourcesContent":["import React, { Suspense } from \"react\";\nimport ProgressBar from \"react-materialize/lib/ProgressBar\";\nimport { useSelector } from \"react-redux\";\nconst Card = React.lazy(() => import(\"react-materialize/lib/Card\"));\nconst Icon = React.lazy(() => import(\"react-materialize/lib/Icon\"));\n\nconst PDFViewer = () => {\n  const paper = useSelector((state) => state.loadedPaper.paper);\n  const success = useSelector((state) => state.loadedPaper.success);\n  const isLoading = useSelector((state) => state.loadedPaper.isLoading);\n  var ShowPdf = null;\n  if (success) {\n    if (paper.arxivId) {\n      ShowPdf = (\n        <CardComponent\n          url={`https://arxiv.org/pdf/${paper.arxivId}.pdf`}\n          id={paper.arxivId}></CardComponent>\n      );\n    } else if (paper.doi) {\n      ShowPdf = <DoiCard paper={paper} />;\n    } else {\n      ShowPdf = <SemanticScholarCard paper={paper} />;\n    }\n  } else {\n    ShowPdf = (\n      <Card title=\"Preview\">\n        <span>Unable to load the paper</span>\n      </Card>\n    );\n  }\n\n  return <Suspense fallback={<ProgressBar />}>{ShowPdf}</Suspense>;\n};\n\nexport default PDFViewer;\n\nexport const CardComponent = ({ url, id }) => {\n  return (\n    <Card\n      title=\"Preview\"\n      actions={[\n        <a href={url} key=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\n          {id}\n          <Icon>open_in_new</Icon>\n        </a>,\n      ]}>\n      <div className=\"video-container\">\n        <iframe src={url} frameBorder=\"0\"></iframe>\n      </div>\n    </Card>\n  );\n};\n\nfunction SemanticScholarCard({ paper }) {\n  return (\n    <Card title=\"Preview\">\n      <a href={paper.url} key=\"\" target=\"_blank\" rel=\"noopener noreferrer\">\n        {paper.paperId}\n        <Icon>open_in_new</Icon>\n      </a>\n    </Card>\n  );\n}\n\nfunction DoiCard({ paper }) {\n  return (\n    <Card title=\"Preview\">\n      <a\n        href={`https://doi.org/${paper.doi}`}\n        key=\"\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        {paper.doi}\n        <Icon>open_in_new</Icon>\n      </a>\n    </Card>\n  );\n}\n"],"sourceRoot":""}